library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity memoriaROM is
   generic (
          dataWidth: natural := 8;
          addrWidth: natural := 3
    );
   port (
          Endereco : in std_logic_vector (addrWidth-1 DOWNTO 0);
          Dado : out std_logic_vector (dataWidth-1 DOWNTO 0)
    );
end entity;

architecture assincrona of memoriaROM is

  constant NOP  : std_logic_vector(3 downto 0) := "0000";
  constant LDA  : std_logic_vector(3 downto 0) := "0001";
  constant SOMA : std_logic_vector(3 downto 0) := "0010";
  constant SUB  : std_logic_vector(3 downto 0) := "0011";
  constant LDI  : std_logic_vector(3 downto 0) := "0100";
  constant STA  : std_logic_vector(3 downto 0) := "0101";
  constant JMP  : std_logic_vector(3 downto 0) := "0110";
  constant JEQ  : std_logic_vector(3 downto 0) := "0111";
  constant CEQ  : std_logic_vector(3 downto 0) := "1000";
  constant JSR  : std_logic_vector(3 downto 0) := "1001";
  constant RET  : std_logic_vector(3 downto 0) := "1010";
  constant ANDi : std_logic_vector(3 downto 0) := "1011";
  
  type blocoMemoria is array(0 TO 2**addrWidth - 1) of std_logic_vector(dataWidth-1 DOWNTO 0);

  function initMemory
        return blocoMemoria is variable tmp : blocoMemoria := (others => (others => '0'));
  begin
      -- Palavra de Controle = SelMUX, Habilita_A, Reset_A, Operacao_ULA
      -- Inicializa os endere√ßos:
		
		--IMPORTANTE: LOCAIS DE MEMORIA PARA NUMEROS: 
		--UNIDADE: 000000100 (4)
		--DEZENA : 000000101 (5)
		--CENTENA: 000000111 (7)
		--MILHAR : 000001000 (8)
		--DMILHAR: 000001001 (9)
		--CMILHAR: 000001010 (10)
		
		--IMPORTANTE: ROTINA DE INCREMENTO FUNCIONAL: (NAO USAR NESSAS POSICOES DE MEMORIA PF)
		--tmp(6)  := LDA  &  "101100000"; 	--carrega K0
		--tmp(7)  := ANDi &  "000000001";  --tira ruido
		--tmp(8)  := CEQ  &  "000000000";
		--tmp(9)  := JEQ  &  "000000110";
		--tmp(10)  := JSR  &  "000100000"; 
		--tmp(11) := JMP  &  "000000110";

		--tmp(32)  := LDI  & "111111111";
		--tmp(33)  := STA  & "111111111";
		--tmp(34)  := LDA  & "000000010";
		--tmp(35)  := SOMA & "000000001";
		--tmp(36)  := STA  & "000000010";
		--tmp(37)  := STA  & "100100000";
		--tmp(38)  := RET  & "000000000";
		
		
		
tmp(0) := x"4" & '0' & x"00";  -- LDI $0
 tmp(1) := x"5" & '0' & x"00";  -- STA $ZERO
 tmp(2) := x"0" & '0' & x"00";  -- 
 tmp(3) := x"4" & '1' & x"FF";  -- LDI $511
 tmp(4) := x"5" & '1' & x"FF";  -- STA $CLR_KEY0
 tmp(5) := x"5" & '1' & x"FE";  -- STA $CLR_KEY1
 tmp(6) := x"0" & '0' & x"00";  -- 
 tmp(7) := x"4" & '0' & x"00";  -- LDI $0
 tmp(8) := x"5" & '1' & x"20";  -- STA $HEX0
 tmp(9) := x"5" & '1' & x"21";  -- STA $HEX1
tmp(10) := x"5" & '1' & x"22";  -- STA $HEX2
tmp(11) := x"5" & '1' & x"23";  -- STA $HEX3
tmp(12) := x"5" & '1' & x"24";  -- STA $HEX4
tmp(13) := x"5" & '1' & x"25";  -- STA $HEX5
tmp(14) := x"0" & '0' & x"00";  -- 
tmp(15) := x"5" & '0' & x"01";  -- STA $FLAG_INIBE_CONT
tmp(16) := x"5" & '1' & x"02";  -- STA $LEDR9
tmp(17) := x"5" & '1' & x"01";  -- STA $LEDR8
tmp(18) := x"0" & '0' & x"00";  -- 
tmp(19) := x"5" & '0' & x"02";  -- STA $UNIDADE
tmp(20) := x"5" & '0' & x"03";  -- STA $DEZENA
tmp(21) := x"5" & '0' & x"04";  -- STA $CENTENA
tmp(22) := x"5" & '0' & x"05";  -- STA $MILHAR
tmp(23) := x"5" & '0' & x"06";  -- STA $DEZENA_MILHAR
tmp(24) := x"5" & '0' & x"07";  -- STA $CENTENA_MILHAR
tmp(25) := x"0" & '0' & x"00";  -- 
tmp(26) := x"4" & '0' & x"09";  -- LDI $9
tmp(27) := x"5" & '0' & x"08";  -- STA $LIM_UNIDADE
tmp(28) := x"5" & '0' & x"09";  -- STA $LIM_DEZENA
tmp(29) := x"5" & '0' & x"0A";  -- STA $LIM_CENTENA
tmp(30) := x"5" & '0' & x"0B";  -- STA $LIM_MILHAR
tmp(31) := x"5" & '0' & x"0C";  -- STA $LIM_DEZENA_MILHAR
tmp(32) := x"5" & '0' & x"0D";  -- STA $LIM_CENTENA_MILHAR
tmp(33) := x"5" & '0' & x"0E";  -- STA $NOVE
tmp(34) := x"0" & '0' & x"00";  -- 
tmp(35) := x"4" & '0' & x"01";  -- LDI $1
tmp(36) := x"5" & '0' & x"0F";  -- STA $UM
tmp(37) := x"0" & '0' & x"00";  -- 
tmp(38) := x"0" & '0' & x"00";  -- main_loop:
tmp(39) := x"0" & '0' & x"00";  -- 
tmp(40) := x"1" & '1' & x"60";  --   LDA $KEY0
tmp(41) := x"B" & '0' & x"01";  --   ANDI $1
tmp(42) := x"8" & '0' & x"00";  --   CEQ $0
tmp(43) := x"7" & '0' & x"2D";  --   JEQ .nao_leu_key0
tmp(44) := x"9" & '0' & x"9D";  --   JSR .incrementa
tmp(45) := x"0" & '0' & x"00";  --   nao_leu_key0:
tmp(46) := x"0" & '0' & x"00";  -- 
tmp(47) := x"1" & '1' & x"61";  --   LDA $KEY1
tmp(48) := x"B" & '0' & x"01";  --   ANDI $1
tmp(49) := x"8" & '0' & x"00";  --   CEQ $0
tmp(50) := x"7" & '0' & x"34";  --   JEQ .nao_leu_key1
tmp(51) := x"9" & '0' & x"F0";  --   JSR .limite
tmp(52) := x"0" & '0' & x"00";  --   nao_leu_key1:
tmp(53) := x"0" & '0' & x"00";  -- 
tmp(54) := x"1" & '1' & x"64";  --   LDA $FPGA_RESET
tmp(55) := x"B" & '0' & x"01";  --   ANDI $1
tmp(56) := x"8" & '0' & x"00";  --   CEQ $0
tmp(57) := x"7" & '0' & x"3B";  --   JEQ .nao_reset
tmp(58) := x"9" & '0' & x"90";  --   JSR .reset
tmp(59) := x"0" & '0' & x"00";  --   nao_reset:
tmp(60) := x"0" & '0' & x"00";  -- 
tmp(61) := x"9" & '0' & x"53";  --   JSR .verifica_limite
tmp(62) := x"0" & '0' & x"00";  -- 
tmp(63) := x"1" & '0' & x"02";  --   LDA $UNIDADE
tmp(64) := x"5" & '1' & x"20";  --   STA $HEX0
tmp(65) := x"0" & '0' & x"00";  -- 
tmp(66) := x"1" & '0' & x"03";  --   LDA $DEZENA
tmp(67) := x"5" & '1' & x"21";  --   STA $HEX1
tmp(68) := x"0" & '0' & x"00";  -- 
tmp(69) := x"1" & '0' & x"04";  --   LDA $CENTENA
tmp(70) := x"5" & '1' & x"22";  --   STA $HEX2
tmp(71) := x"0" & '0' & x"00";  -- 
tmp(72) := x"1" & '0' & x"05";  --   LDA $MILHAR
tmp(73) := x"5" & '1' & x"23";  --   STA $HEX3
tmp(74) := x"0" & '0' & x"00";  -- 
tmp(75) := x"1" & '0' & x"06";  --   LDA $DEZENA_MILHAR
tmp(76) := x"5" & '1' & x"24";  --   STA $HEX4
tmp(77) := x"0" & '0' & x"00";  -- 
tmp(78) := x"1" & '0' & x"07";  --   LDA $CENTENA_MILHAR
tmp(79) := x"5" & '1' & x"25";  --   STA $HEX5
tmp(80) := x"0" & '0' & x"00";  -- 
tmp(81) := x"6" & '0' & x"26";  -- JMP .main_loop
tmp(82) := x"0" & '0' & x"00";  -- 
tmp(83) := x"0" & '0' & x"00";  -- verifica_limite:
tmp(84) := x"0" & '0' & x"00";  --   verifica_unidade:
tmp(85) := x"1" & '0' & x"02";  --     LDA $UNIDADE
tmp(86) := x"8" & '0' & x"08";  --     CEQ $LIM_UNIDADE
tmp(87) := x"7" & '0' & x"5D";  --     JEQ .verifica_dezena
tmp(88) := x"4" & '0' & x"00";  --     LDI $0
tmp(89) := x"5" & '0' & x"01";  --     STA $FLAG_INIBE_CONT
tmp(90) := x"5" & '1' & x"02";  --     STA $LEDR9
tmp(91) := x"A" & '0' & x"00";  --     RET
tmp(92) := x"0" & '0' & x"00";  -- 
tmp(93) := x"0" & '0' & x"00";  --   verifica_dezena:
tmp(94) := x"1" & '0' & x"03";  --     LDA $DEZENA
tmp(95) := x"8" & '0' & x"09";  --     CEQ $LIM_DEZENA
tmp(96) := x"7" & '0' & x"66";  --     JEQ .verifica_centena
tmp(97) := x"4" & '0' & x"00";  --     LDI $0
tmp(98) := x"5" & '0' & x"01";  --     STA $FLAG_INIBE_CONT
tmp(99) := x"5" & '1' & x"02";  --     STA $LEDR9
tmp(100) := x"A" & '0' & x"00"; --     RET
tmp(101) := x"0" & '0' & x"00"; -- 
tmp(102) := x"0" & '0' & x"00"; --   verifica_centena:
tmp(103) := x"1" & '0' & x"04"; --     LDA $CENTENA
tmp(104) := x"8" & '0' & x"0A"; --     CEQ $LIM_CENTENA
tmp(105) := x"7" & '0' & x"6F"; --     JEQ .verifica_milhar
tmp(106) := x"4" & '0' & x"00"; --     LDI $0
tmp(107) := x"5" & '0' & x"01"; --     STA $FLAG_INIBE_CONT
tmp(108) := x"5" & '1' & x"02"; --     STA $LEDR9
tmp(109) := x"A" & '0' & x"00"; --     RET
tmp(110) := x"0" & '0' & x"00"; -- 
tmp(111) := x"0" & '0' & x"00"; --   verifica_milhar:
tmp(112) := x"1" & '0' & x"05"; --     LDA $MILHAR
tmp(113) := x"8" & '0' & x"0B"; --     CEQ $LIM_MILHAR
tmp(114) := x"7" & '0' & x"78"; --     JEQ .verifica_dezena_milhar
tmp(115) := x"4" & '0' & x"00"; --     LDI $0
tmp(116) := x"5" & '0' & x"01"; --     STA $FLAG_INIBE_CONT
tmp(117) := x"5" & '1' & x"02"; --     STA $LEDR9
tmp(118) := x"A" & '0' & x"00"; --     RET
tmp(119) := x"0" & '0' & x"00"; -- 
tmp(120) := x"0" & '0' & x"00"; --   verifica_dezena_milhar:
tmp(121) := x"1" & '0' & x"06"; --     LDA $DEZENA_MILHAR
tmp(122) := x"8" & '0' & x"0C"; --     CEQ $LIM_DEZENA_MILHAR
tmp(123) := x"7" & '0' & x"81"; --     JEQ .verifica_centena_milhar
tmp(124) := x"4" & '0' & x"00"; --     LDI $0
tmp(125) := x"5" & '0' & x"01"; --     STA $FLAG_INIBE_CONT
tmp(126) := x"5" & '1' & x"02"; --     STA $LEDR9
tmp(127) := x"A" & '0' & x"00"; --     RET
tmp(128) := x"0" & '0' & x"00"; -- 
tmp(129) := x"0" & '0' & x"00"; --   verifica_centena_milhar:
tmp(130) := x"1" & '0' & x"07"; --     LDA $CENTENA_MILHAR
tmp(131) := x"8" & '0' & x"0D"; --     CEQ $LIM_CENTENA_MILHAR
tmp(132) := x"7" & '0' & x"8A"; --     JEQ .habilita_flag
tmp(133) := x"4" & '0' & x"00"; --     LDI $0
tmp(134) := x"5" & '0' & x"01"; --     STA $FLAG_INIBE_CONT
tmp(135) := x"5" & '1' & x"02"; --     STA $LEDR9
tmp(136) := x"A" & '0' & x"00"; --     RET
tmp(137) := x"0" & '0' & x"00"; -- 
tmp(138) := x"0" & '0' & x"00"; --   habilita_flag:
tmp(139) := x"4" & '0' & x"01"; --     LDI $1
tmp(140) := x"5" & '0' & x"01"; --     STA $FLAG_INIBE_CONT
tmp(141) := x"5" & '1' & x"02"; --     STA $LEDR9
tmp(142) := x"A" & '0' & x"00"; -- RET
tmp(143) := x"0" & '0' & x"00"; -- 
tmp(144) := x"0" & '0' & x"00"; -- reset:
tmp(145) := x"4" & '0' & x"00"; --   LDI $0
tmp(146) := x"5" & '0' & x"02"; --   STA $UNIDADE
tmp(147) := x"5" & '0' & x"03"; --   STA $DEZENA
tmp(148) := x"5" & '0' & x"04"; --   STA $CENTENA
tmp(149) := x"5" & '0' & x"05"; --   STA $MILHAR
tmp(150) := x"5" & '0' & x"06"; --   STA $DEZENA_MILHAR
tmp(151) := x"5" & '0' & x"07"; --   STA $CENTENA_MILHAR
tmp(152) := x"5" & '0' & x"01"; --   STA $FLAG_INIBE_CONT
tmp(153) := x"5" & '1' & x"02"; --   STA $LEDR9
tmp(154) := x"5" & '1' & x"01"; --   STA $LEDR8
tmp(155) := x"A" & '0' & x"00"; -- RET
tmp(156) := x"0" & '0' & x"00"; -- 
tmp(157) := x"0" & '0' & x"00"; -- incrementa:
tmp(158) := x"4" & '1' & x"FF"; --   LDI $511
tmp(159) := x"5" & '1' & x"FF"; --   STA $CLR_KEY0
tmp(160) := x"0" & '0' & x"00"; -- 
tmp(161) := x"1" & '0' & x"01"; --   LDA $FLAG_INIBE_CONT
tmp(162) := x"8" & '0' & x"00"; --   CEQ $ZERO
tmp(163) := x"7" & '0' & x"A6"; --   JEQ .incrementa_unidade
tmp(164) := x"A" & '0' & x"00"; --   RET
tmp(165) := x"0" & '0' & x"00"; -- 
tmp(166) := x"0" & '0' & x"00"; --   incrementa_unidade:
tmp(167) := x"1" & '0' & x"02"; --     LDA $UNIDADE
tmp(168) := x"8" & '0' & x"0E"; --     CEQ $NOVE
tmp(169) := x"7" & '0' & x"AE"; --     JEQ .incrementa_dezena
tmp(170) := x"2" & '0' & x"0F"; --     SOMA $UM
tmp(171) := x"5" & '0' & x"02"; --     STA $UNIDADE
tmp(172) := x"A" & '0' & x"00"; --     RET
tmp(173) := x"0" & '0' & x"00"; -- 
tmp(174) := x"0" & '0' & x"00"; --   incrementa_dezena:
tmp(175) := x"1" & '0' & x"03"; --     LDA $DEZENA
tmp(176) := x"8" & '0' & x"0E"; --     CEQ $NOVE
tmp(177) := x"7" & '0' & x"B8"; --     JEQ .incrementa_centena
tmp(178) := x"2" & '0' & x"0F"; --     SOMA $UM
tmp(179) := x"5" & '0' & x"03"; --     STA $DEZENA
tmp(180) := x"1" & '0' & x"00"; --     LDA $ZERO
tmp(181) := x"5" & '0' & x"02"; --     STA $UNIDADE
tmp(182) := x"A" & '0' & x"00"; --     RET
tmp(183) := x"0" & '0' & x"00"; -- 
tmp(184) := x"0" & '0' & x"00"; --   incrementa_centena:
tmp(185) := x"1" & '0' & x"04"; --     LDA $CENTENA
tmp(186) := x"8" & '0' & x"0E"; --     CEQ $NOVE
tmp(187) := x"7" & '0' & x"C3"; --     JEQ .incrementa_milhar
tmp(188) := x"2" & '0' & x"0F"; --     SOMA $UM
tmp(189) := x"5" & '0' & x"04"; --     STA $CENTENA
tmp(190) := x"1" & '0' & x"00"; --     LDA $ZERO
tmp(191) := x"5" & '0' & x"02"; --     STA $UNIDADE
tmp(192) := x"5" & '0' & x"03"; --     STA $DEZENA
tmp(193) := x"A" & '0' & x"00"; --     RET
tmp(194) := x"0" & '0' & x"00"; -- 
tmp(195) := x"0" & '0' & x"00"; --   incrementa_milhar:
tmp(196) := x"1" & '0' & x"05"; --     LDA $MILHAR
tmp(197) := x"8" & '0' & x"0E"; --     CEQ $NOVE
tmp(198) := x"7" & '0' & x"CF"; --     JEQ .incrementa_dezena_milhar
tmp(199) := x"2" & '0' & x"0F"; --     SOMA $UM
tmp(200) := x"5" & '0' & x"05"; --     STA $MILHAR
tmp(201) := x"1" & '0' & x"00"; --     LDA $ZERO
tmp(202) := x"5" & '0' & x"02"; --     STA $UNIDADE
tmp(203) := x"5" & '0' & x"03"; --     STA $DEZENA
tmp(204) := x"5" & '0' & x"04"; --     STA $CENTENA
tmp(205) := x"A" & '0' & x"00"; --     RET
tmp(206) := x"0" & '0' & x"00"; -- 
tmp(207) := x"0" & '0' & x"00"; --   incrementa_dezena_milhar:
tmp(208) := x"1" & '0' & x"06"; --     LDA $DEZENA_MILHAR
tmp(209) := x"8" & '0' & x"0E"; --     CEQ $NOVE
tmp(210) := x"7" & '0' & x"DC"; --     JEQ .incrementa_centena_milhar
tmp(211) := x"2" & '0' & x"0F"; --     SOMA $UM
tmp(212) := x"5" & '0' & x"06"; --     STA $DEZENA_MILHAR
tmp(213) := x"1" & '0' & x"00"; --     LDA $ZERO
tmp(214) := x"5" & '0' & x"02"; --     STA $UNIDADE
tmp(215) := x"5" & '0' & x"03"; --     STA $DEZENA
tmp(216) := x"5" & '0' & x"04"; --     STA $CENTENA
tmp(217) := x"5" & '0' & x"05"; --     STA $MILHAR
tmp(218) := x"A" & '0' & x"00"; --     RET
tmp(219) := x"0" & '0' & x"00"; -- 
tmp(220) := x"0" & '0' & x"00"; --   incrementa_centena_milhar:
tmp(221) := x"1" & '0' & x"07"; --     LDA $CENTENA_MILHAR
tmp(222) := x"8" & '0' & x"0E"; --     CEQ $NOVE
tmp(223) := x"7" & '0' & x"EA"; --     JEQ .overflow
tmp(224) := x"2" & '0' & x"0F"; --     SOMA $UM
tmp(225) := x"5" & '0' & x"07"; --     STA $CENTENA_MILHAR
tmp(226) := x"1" & '0' & x"00"; --     LDA $ZERO
tmp(227) := x"5" & '0' & x"02"; --     STA $UNIDADE
tmp(228) := x"5" & '0' & x"03"; --     STA $DEZENA
tmp(229) := x"5" & '0' & x"04"; --     STA $CENTENA
tmp(230) := x"5" & '0' & x"05"; --     STA $MILHAR
tmp(231) := x"5" & '0' & x"06"; --     STA $DEZENA_MILHAR
tmp(232) := x"A" & '0' & x"00"; --     RET
tmp(233) := x"0" & '0' & x"00"; -- 
tmp(234) := x"0" & '0' & x"00"; --   overflow:
tmp(235) := x"4" & '0' & x"01"; --     LDI $1
tmp(236) := x"5" & '0' & x"01"; --     STA $FLAG_INIBE_CONT
tmp(237) := x"5" & '1' & x"01"; --     STA $LEDR8
tmp(238) := x"A" & '0' & x"00"; -- RET
tmp(239) := x"0" & '0' & x"00"; -- 
tmp(240) := x"0" & '0' & x"00"; -- limite:
tmp(241) := x"4" & '1' & x"FF"; -- LDI $511
tmp(242) := x"5" & '1' & x"FE"; -- STA $CLR_KEY1
tmp(243) := x"0" & '0' & x"00"; -- 
tmp(244) := x"1" & '0' & x"00"; -- LDA $ZERO
tmp(245) := x"5" & '1' & x"20"; -- STA $HEX0
tmp(246) := x"5" & '1' & x"21"; -- STA $HEX1
tmp(247) := x"5" & '1' & x"22"; -- STA $HEX2
tmp(248) := x"5" & '1' & x"23"; -- STA $HEX3
tmp(249) := x"5" & '1' & x"24"; -- STA $HEX4
tmp(250) := x"5" & '1' & x"25"; -- STA $HEX5
tmp(251) := x"0" & '0' & x"00"; -- 
tmp(252) := x"0" & '0' & x"00"; -- ler_key1_und:
tmp(253) := x"1" & '1' & x"61"; --   LDA $KEY1
tmp(254) := x"B" & '0' & x"01"; --   ANDI $1
tmp(255) := x"8" & '0' & x"00"; --   CEQ $ZERO
tmp(256) := x"7" & '0' & x"FC"; --   JEQ .ler_key1_und
tmp(257) := x"0" & '0' & x"00"; -- 
tmp(258) := x"4" & '1' & x"FF"; -- LDI $511
tmp(259) := x"5" & '1' & x"FE"; -- STA $CLR_KEY1
tmp(260) := x"1" & '1' & x"40"; -- LDA $SWS
tmp(261) := x"5" & '0' & x"08"; -- STA $LIM_UNIDADE
tmp(262) := x"5" & '1' & x"20"; -- STA $HEX0
tmp(263) := x"0" & '0' & x"00"; -- 
tmp(264) := x"4" & '0' & x"01"; -- LDI $1
tmp(265) := x"5" & '1' & x"00"; -- STA $LEDS
tmp(266) := x"0" & '0' & x"00"; -- 
tmp(267) := x"0" & '0' & x"00"; -- ler_key1_dez:
tmp(268) := x"1" & '1' & x"61"; --   LDA $KEY1
tmp(269) := x"B" & '0' & x"01"; --   ANDI $1
tmp(270) := x"8" & '0' & x"00"; --   CEQ $ZERO
tmp(271) := x"7" & '1' & x"0B"; --   JEQ .ler_key1_dez
tmp(272) := x"0" & '0' & x"00"; -- 
tmp(273) := x"4" & '1' & x"FF"; -- LDI $511
tmp(274) := x"5" & '1' & x"FE"; -- STA $CLR_KEY1
tmp(275) := x"1" & '1' & x"40"; -- LDA $SWS
tmp(276) := x"5" & '0' & x"09"; -- STA $LIM_DEZENA
tmp(277) := x"5" & '1' & x"21"; -- STA $HEX1
tmp(278) := x"0" & '0' & x"00"; -- 
tmp(279) := x"4" & '0' & x"03"; -- LDI $3
tmp(280) := x"5" & '1' & x"00"; -- STA $LEDS
tmp(281) := x"0" & '0' & x"00"; -- 
tmp(282) := x"0" & '0' & x"00"; -- ler_key1_cent:
tmp(283) := x"1" & '1' & x"61"; --   LDA $KEY1
tmp(284) := x"B" & '0' & x"01"; --   ANDI $1
tmp(285) := x"8" & '0' & x"00"; --   CEQ $ZERO
tmp(286) := x"7" & '1' & x"1A"; --   JEQ .ler_key1_cent
tmp(287) := x"0" & '0' & x"00"; -- 
tmp(288) := x"4" & '1' & x"FF"; -- LDI $511
tmp(289) := x"5" & '1' & x"FE"; -- STA $CLR_KEY1
tmp(290) := x"1" & '1' & x"40"; -- LDA $SWS
tmp(291) := x"5" & '0' & x"0A"; -- STA $LIM_CENTENA
tmp(292) := x"5" & '1' & x"22"; -- STA $HEX2
tmp(293) := x"0" & '0' & x"00"; -- 
tmp(294) := x"4" & '0' & x"07"; -- LDI $7
tmp(295) := x"5" & '1' & x"00"; -- STA $LEDS
tmp(296) := x"0" & '0' & x"00"; -- 
tmp(297) := x"0" & '0' & x"00"; -- ler_key1_mil:
tmp(298) := x"1" & '1' & x"61"; --   LDA $KEY1
tmp(299) := x"B" & '0' & x"01"; --   ANDI $1
tmp(300) := x"8" & '0' & x"00"; --   CEQ $ZERO
tmp(301) := x"7" & '1' & x"29"; --   JEQ .ler_key1_mil
tmp(302) := x"0" & '0' & x"00"; -- 
tmp(303) := x"4" & '1' & x"FF"; -- LDI $511
tmp(304) := x"5" & '1' & x"FE"; -- STA $CLR_KEY1
tmp(305) := x"1" & '1' & x"40"; -- LDA $SWS
tmp(306) := x"5" & '0' & x"0B"; -- STA $LIM_MILHAR
tmp(307) := x"5" & '1' & x"23"; -- STA $HEX3
tmp(308) := x"0" & '0' & x"00"; -- 
tmp(309) := x"4" & '0' & x"0F"; -- LDI $15
tmp(310) := x"5" & '1' & x"00"; -- STA $LEDS
tmp(311) := x"0" & '0' & x"00"; -- 
tmp(312) := x"0" & '0' & x"00"; -- ler_key1_dezmil:
tmp(313) := x"1" & '1' & x"61"; --   LDA $KEY1
tmp(314) := x"B" & '0' & x"01"; --   ANDI $1
tmp(315) := x"8" & '0' & x"00"; --   CEQ $ZERO
tmp(316) := x"7" & '1' & x"38"; --   JEQ .ler_key1_dezmil
tmp(317) := x"0" & '0' & x"00"; -- 
tmp(318) := x"4" & '1' & x"FF"; -- LDI $511
tmp(319) := x"5" & '1' & x"FE"; -- STA $CLR_KEY1
tmp(320) := x"1" & '1' & x"40"; -- LDA $SWS
tmp(321) := x"5" & '0' & x"0C"; -- STA $LIM_DEZENA_MILHAR
tmp(322) := x"5" & '1' & x"24"; -- STA $HEX4
tmp(323) := x"0" & '0' & x"00"; -- 
tmp(324) := x"4" & '0' & x"1F"; -- LDI $31
tmp(325) := x"5" & '1' & x"00"; -- STA $LEDS
tmp(326) := x"0" & '0' & x"00"; -- 
tmp(327) := x"0" & '0' & x"00"; -- ler_key1_centmil:
tmp(328) := x"1" & '1' & x"61"; --   LDA $KEY1
tmp(329) := x"B" & '0' & x"01"; --   ANDI $1
tmp(330) := x"8" & '0' & x"00"; --   CEQ $ZERO
tmp(331) := x"7" & '1' & x"47"; --   JEQ .ler_key1_centmil
tmp(332) := x"0" & '0' & x"00"; -- 
tmp(333) := x"4" & '1' & x"FF"; -- LDI $511
tmp(334) := x"5" & '1' & x"FE"; -- STA $CLR_KEY1
tmp(335) := x"1" & '1' & x"40"; -- LDA $SWS
tmp(336) := x"5" & '0' & x"0D"; -- STA $LIM_CENTENA_MILHAR
tmp(337) := x"5" & '1' & x"25"; -- STA $HEX5
tmp(338) := x"0" & '0' & x"00"; -- 
tmp(339) := x"4" & '0' & x"3F"; -- LDI $63
tmp(340) := x"5" & '1' & x"00"; -- STA $LEDS
tmp(341) := x"0" & '0' & x"00"; -- 
tmp(342) := x"0" & '0' & x"00"; -- ler_key1_after:
tmp(343) := x"1" & '1' & x"61"; --   LDA $KEY1
tmp(344) := x"B" & '0' & x"01"; --   ANDI $1
tmp(345) := x"8" & '0' & x"00"; --   CEQ $ZERO
tmp(346) := x"7" & '1' & x"56"; --   JEQ .ler_key1_after
tmp(347) := x"0" & '0' & x"00"; -- 
tmp(348) := x"4" & '1' & x"FF"; -- LDI $511
tmp(349) := x"5" & '1' & x"FE"; -- STA $CLR_KEY1
tmp(350) := x"0" & '0' & x"00"; -- 
tmp(351) := x"4" & '0' & x"00"; -- LDI $0
tmp(352) := x"5" & '1' & x"00"; -- STA $LEDS
tmp(353) := x"0" & '0' & x"00"; -- 
tmp(354) := x"1" & '0' & x"02"; -- LDA $UNIDADE
tmp(355) := x"5" & '1' & x"20"; -- STA $HEX0
tmp(356) := x"0" & '0' & x"00"; -- 
tmp(357) := x"1" & '0' & x"03"; -- LDA $DEZENA
tmp(358) := x"5" & '1' & x"21"; -- STA $HEX1
tmp(359) := x"0" & '0' & x"00"; -- 
tmp(360) := x"1" & '0' & x"04"; -- LDA $CENTENA
tmp(361) := x"5" & '1' & x"22"; -- STA $HEX2
tmp(362) := x"0" & '0' & x"00"; -- 
tmp(363) := x"1" & '0' & x"05"; -- LDA $MILHAR
tmp(364) := x"5" & '1' & x"23"; -- STA $HEX3
tmp(365) := x"0" & '0' & x"00"; -- 
tmp(366) := x"1" & '0' & x"06"; -- LDA $DEZENA_MILHAR
tmp(367) := x"5" & '1' & x"24"; -- STA $HEX4
tmp(368) := x"0" & '0' & x"00"; -- 
tmp(369) := x"1" & '0' & x"07"; -- LDA $CENTENA_MILHAR
tmp(370) := x"5" & '1' & x"25"; -- STA $HEX5
tmp(371) := x"0" & '0' & x"00"; -- 
tmp(372) := x"A" & '0' & x"00"; -- RET
		return tmp;
    end initMemory;

    signal memROM : blocoMemoria := initMemory;

begin
    Dado <= memROM (to_integer(unsigned(Endereco)));
end architecture;